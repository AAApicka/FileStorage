// <auto-generated />
using System;
using Elinkx.FileStorage.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Elinkx.FileStorage.DataLayer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190530160608_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Elinkx.FileStorage.DataLayer.Entities.FileContent", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content");

                    b.HasKey("RowId");

                    b.ToTable("FileContent");
                });

            modelBuilder.Entity("Elinkx.FileStorage.DataLayer.Entities.FileVersion", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Changed");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("FileId");

                    b.Property<int?>("RowId");

                    b.Property<bool>("Signed");

                    b.Property<int>("Size");

                    b.HasKey("VersionId");

                    b.HasIndex("FileId");

                    b.HasIndex("RowId")
                        .IsUnique()
                        .HasFilter("[RowId] IS NOT NULL");

                    b.ToTable("FileVersion");
                });

            modelBuilder.Entity("Elinkx.FileStorage.DataLayer.Entities.Metadata", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Changed");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Description");

                    b.Property<int>("DocumentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("Reject");

                    b.Property<int>("SubjectId");

                    b.Property<string>("SubtypeId")
                        .HasMaxLength(20);

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("FileId");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("Elinkx.FileStorage.DataLayer.Entities.FileVersion", b =>
                {
                    b.HasOne("Elinkx.FileStorage.DataLayer.Entities.Metadata", "Metadata")
                        .WithMany("FileVersion")
                        .HasForeignKey("FileId");

                    b.HasOne("Elinkx.FileStorage.DataLayer.Entities.FileContent", "FileContent")
                        .WithOne("FileVersion")
                        .HasForeignKey("Elinkx.FileStorage.DataLayer.Entities.FileVersion", "RowId");
                });
#pragma warning restore 612, 618
        }
    }
}
